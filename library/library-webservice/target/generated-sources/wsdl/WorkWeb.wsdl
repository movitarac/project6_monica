<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Generated by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. -->
<definitions targetNamespace="http://webservice.lib.racic.com/" name="workWeb" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:tns="http://webservice.lib.racic.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://webservice.lib.racic.com/" schemaLocation="WorkWeb_schema1.xsd"/>
    </xsd:schema>
  </types>
  <message name="init">
    <part name="parameters" element="tns:init"/>
  </message>
  <message name="initResponse">
    <part name="parameters" element="tns:initResponse"/>
  </message>
  <message name="isValidWorkByTitle">
    <part name="parameters" element="tns:isValidWorkByTitle"/>
  </message>
  <message name="isValidWorkByTitleResponse">
    <part name="parameters" element="tns:isValidWorkByTitleResponse"/>
  </message>
  <message name="isValidWorkByAuthor">
    <part name="parameters" element="tns:isValidWorkByAuthor"/>
  </message>
  <message name="isValidWorkByAuthorResponse">
    <part name="parameters" element="tns:isValidWorkByAuthorResponse"/>
  </message>
  <message name="findWorksByAuthorContain">
    <part name="parameters" element="tns:findWorksByAuthorContain"/>
  </message>
  <message name="findWorksByAuthorContainResponse">
    <part name="parameters" element="tns:findWorksByAuthorContainResponse"/>
  </message>
  <message name="findWorksByTitleContain">
    <part name="parameters" element="tns:findWorksByTitleContain"/>
  </message>
  <message name="findWorksByTitleContainResponse">
    <part name="parameters" element="tns:findWorksByTitleContainResponse"/>
  </message>
  <message name="findWorksByTitleAndAuthor">
    <part name="parameters" element="tns:findWorksByTitleAndAuthor"/>
  </message>
  <message name="findWorksByTitleAndAuthorResponse">
    <part name="parameters" element="tns:findWorksByTitleAndAuthorResponse"/>
  </message>
  <message name="findWorksById">
    <part name="parameters" element="tns:findWorksById"/>
  </message>
  <message name="findWorksByIdResponse">
    <part name="parameters" element="tns:findWorksByIdResponse"/>
  </message>
  <message name="getAll">
    <part name="parameters" element="tns:getAll"/>
  </message>
  <message name="getAllResponse">
    <part name="parameters" element="tns:getAllResponse"/>
  </message>
  <message name="isValidWork">
    <part name="parameters" element="tns:isValidWork"/>
  </message>
  <message name="isValidWorkResponse">
    <part name="parameters" element="tns:isValidWorkResponse"/>
  </message>
  <portType name="workWs">
    <operation name="init">
      <input wsam:Action="http://webservice.lib.racic.com/workWs/initRequest" message="tns:init"/>
      <output wsam:Action="http://webservice.lib.racic.com/workWs/initResponse" message="tns:initResponse"/>
    </operation>
    <operation name="isValidWorkByTitle">
      <input wsam:Action="http://webservice.lib.racic.com/workWs/isValidWorkByTitleRequest" message="tns:isValidWorkByTitle"/>
      <output wsam:Action="http://webservice.lib.racic.com/workWs/isValidWorkByTitleResponse" message="tns:isValidWorkByTitleResponse"/>
    </operation>
    <operation name="isValidWorkByAuthor">
      <input wsam:Action="http://webservice.lib.racic.com/workWs/isValidWorkByAuthorRequest" message="tns:isValidWorkByAuthor"/>
      <output wsam:Action="http://webservice.lib.racic.com/workWs/isValidWorkByAuthorResponse" message="tns:isValidWorkByAuthorResponse"/>
    </operation>
    <operation name="findWorksByAuthorContain">
      <input wsam:Action="http://webservice.lib.racic.com/workWs/findWorksByAuthorContainRequest" message="tns:findWorksByAuthorContain"/>
      <output wsam:Action="http://webservice.lib.racic.com/workWs/findWorksByAuthorContainResponse" message="tns:findWorksByAuthorContainResponse"/>
    </operation>
    <operation name="findWorksByTitleContain">
      <input wsam:Action="http://webservice.lib.racic.com/workWs/findWorksByTitleContainRequest" message="tns:findWorksByTitleContain"/>
      <output wsam:Action="http://webservice.lib.racic.com/workWs/findWorksByTitleContainResponse" message="tns:findWorksByTitleContainResponse"/>
    </operation>
    <operation name="findWorksByTitleAndAuthor">
      <input wsam:Action="http://webservice.lib.racic.com/workWs/findWorksByTitleAndAuthorRequest" message="tns:findWorksByTitleAndAuthor"/>
      <output wsam:Action="http://webservice.lib.racic.com/workWs/findWorksByTitleAndAuthorResponse" message="tns:findWorksByTitleAndAuthorResponse"/>
    </operation>
    <operation name="findWorksById">
      <input wsam:Action="http://webservice.lib.racic.com/workWs/findWorksByIdRequest" message="tns:findWorksById"/>
      <output wsam:Action="http://webservice.lib.racic.com/workWs/findWorksByIdResponse" message="tns:findWorksByIdResponse"/>
    </operation>
    <operation name="getAll">
      <input wsam:Action="http://webservice.lib.racic.com/workWs/getAllRequest" message="tns:getAll"/>
      <output wsam:Action="http://webservice.lib.racic.com/workWs/getAllResponse" message="tns:getAllResponse"/>
    </operation>
    <operation name="isValidWork">
      <input wsam:Action="http://webservice.lib.racic.com/workWs/isValidWorkRequest" message="tns:isValidWork"/>
      <output wsam:Action="http://webservice.lib.racic.com/workWs/isValidWorkResponse" message="tns:isValidWorkResponse"/>
    </operation>
  </portType>
  <binding name="workWsPortBinding" type="tns:workWs">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="init">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="isValidWorkByTitle">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="isValidWorkByAuthor">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="findWorksByAuthorContain">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="findWorksByTitleContain">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="findWorksByTitleAndAuthor">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="findWorksById">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getAll">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="isValidWork">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="workWeb">
    <port name="workWsPort" binding="tns:workWsPortBinding">
      <soap:address location="REPLACE_WITH_ACTUAL_URL"/>
    </port>
  </service>
</definitions>

