
package com.racic.lib.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "workWs", targetNamespace = "http://webservice.lib.racic.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WorkWs {


    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "init", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.Init")
    @ResponseWrapper(localName = "initResponse", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.InitResponse")
    @Action(input = "http://webservice.lib.racic.com/workWs/initRequest", output = "http://webservice.lib.racic.com/workWs/initResponse")
    public void init();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<com.racic.lib.client.Work>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findWorksByAuthorContain", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.FindWorksByAuthorContain")
    @ResponseWrapper(localName = "findWorksByAuthorContainResponse", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.FindWorksByAuthorContainResponse")
    @Action(input = "http://webservice.lib.racic.com/workWs/findWorksByAuthorContainRequest", output = "http://webservice.lib.racic.com/workWs/findWorksByAuthorContainResponse")
    public List<Work> findWorksByAuthorContain(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0);

    /**
     *
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isValidWorkByTitle", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.IsValidWorkByTitle")
    @ResponseWrapper(localName = "isValidWorkByTitleResponse", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.IsValidWorkByTitleResponse")
    @Action(input = "http://webservice.lib.racic.com/workWs/isValidWorkByTitleRequest", output = "http://webservice.lib.racic.com/workWs/isValidWorkByTitleResponse")
    public boolean isValidWorkByTitle(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0);

    /**
     *
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<com.racic.lib.client.Work>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findWorksByTitleAndAuthor", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.FindWorksByTitleAndAuthor")
    @ResponseWrapper(localName = "findWorksByTitleAndAuthorResponse", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.FindWorksByTitleAndAuthorResponse")
    @Action(input = "http://webservice.lib.racic.com/workWs/findWorksByTitleAndAuthorRequest", output = "http://webservice.lib.racic.com/workWs/findWorksByTitleAndAuthorResponse")
    public List<Work> findWorksByTitleAndAuthor(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
                    String arg1);

    /**
     *
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isValidWorkByAuthor", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.IsValidWorkByAuthor")
    @ResponseWrapper(localName = "isValidWorkByAuthorResponse", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.IsValidWorkByAuthorResponse")
    @Action(input = "http://webservice.lib.racic.com/workWs/isValidWorkByAuthorRequest", output = "http://webservice.lib.racic.com/workWs/isValidWorkByAuthorResponse")
    public boolean isValidWorkByAuthor(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0);

    /**
     *
     * @param arg0
     * @return
     *     returns java.util.List<com.racic.lib.client.Work>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findWorksByTitleContain", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.FindWorksByTitleContain")
    @ResponseWrapper(localName = "findWorksByTitleContainResponse", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.FindWorksByTitleContainResponse")
    @Action(input = "http://webservice.lib.racic.com/workWs/findWorksByTitleContainRequest", output = "http://webservice.lib.racic.com/workWs/findWorksByTitleContainResponse")
    public List<Work> findWorksByTitleContain(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0);

    /**
     *
     * @return
     *     returns java.util.List<com.racic.lib.client.Work>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAll", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.GetAll")
    @ResponseWrapper(localName = "getAllResponse", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.GetAllResponse")
    @Action(input = "http://webservice.lib.racic.com/workWs/getAllRequest", output = "http://webservice.lib.racic.com/workWs/getAllResponse")
    public List<Work> getAll();

    /**
     *
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isValidWork", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.IsValidWork")
    @ResponseWrapper(localName = "isValidWorkResponse", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.IsValidWorkResponse")
    @Action(input = "http://webservice.lib.racic.com/workWs/isValidWorkRequest", output = "http://webservice.lib.racic.com/workWs/isValidWorkResponse")
    public boolean isValidWork(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
                    String arg1);

    /**
     *
     * @param arg0
     * @return
     *     returns com.racic.lib.client.Work
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findWorksById", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.FindWorksById")
    @ResponseWrapper(localName = "findWorksByIdResponse", targetNamespace = "http://webservice.lib.racic.com/", className = "com.racic.lib.client.FindWorksByIdResponse")
    @Action(input = "http://webservice.lib.racic.com/workWs/findWorksByIdRequest", output = "http://webservice.lib.racic.com/workWs/findWorksByIdResponse")
    public Work findWorksById(
            @WebParam(name = "arg0", targetNamespace = "")
                    Integer arg0);

}
